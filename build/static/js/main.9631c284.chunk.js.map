{"version":3,"sources":["components/partials/CommitsList/CommitsListElement.module.scss","components/template/Container.module.scss","components/partials/MeasuresList.module.scss","constants/types.js","reducers/CommitsReducer.js","reducers/MeasuresReducer.js","utils/configureStore.js","components/template/Container.js","components/routes/Home.js","components/partials/CommitsList/CommitsListElement.js","components/partials/CommitsList.js","actions/CommitActions.js","components/routes/Commits.js","components/partials/MeasuresList/MeasuresListElement.js","actions/MeasureActions.js","components/partials/MeasuresList.js","components/partials/Measure.js","components/routes/Measures.js","components/routes/NotFound.js","components/partials/NavigationBar.js","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","FETCH_COMMITS","FETCH_MEASURES","initialState","state","action","type","payload","measure","history","createBrowserHistory","composeEnhancers","composeWithDevTools","ContentContainer","className","style","container","this","props","children","Component","connect","Home","Container","CommitsListElement","commit","commitsListElement","avatar","href","author","html_url","src","avatar_url","authorAvatar","alt","name","text","message","authorName","CommitsList","waitingForCommitsResponse","fetchCommits","owner","repo","then","setState","commits","length","map","sha","commitsForRepo","commitsList","renderCommitsListElements","mapDispatchToProps","dispatch","getState","apiUrl","fetch","res","json","newCommits","Commits","commitsElements","MeasuresListElement","console","log","progress","volume","status","trafficLight","results","comment","fetchMeasures","jsondata","MeasuresList","waitingForActionsResponse","measures","header","renderMeasuresListElements","Measure","Measures","measuresElements","selectedMeasureId","match","params","measureId","NotFound","NavigationBar","environment","WebFont","load","google","families","store","preloadedState","middleware","thunk","createStore","combineReducers","router","connectRouter","CommitsReducer","MeasuresReducer","createRootReducer","applyMiddleware","routerMiddleware","configureStore","App","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9631c284.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"commitsListElement\":\"CommitsListElement_commitsListElement__1jCLa\",\"avatar\":\"CommitsListElement_avatar__2blBc\",\"text\":\"CommitsListElement_text__2Sp5G\",\"message\":\"CommitsListElement_message__C7FaU\",\"authorName\":\"CommitsListElement_authorName__1lSwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__dTOM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MeasuresList_header__g4iFc\"};","export const FETCH_COMMITS = 'FETCH_COMMITS';\nexport const FETCH_MEASURES = 'FETCH_MEASURES';\n","import { FETCH_COMMITS } from 'constants/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n\tswitch(action.type) {\n\t\tcase FETCH_COMMITS:\n\t\t\treturn action.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\n}\n","import { FETCH_MEASURES } from 'constants/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, measure) {\n\tswitch(measure.type) {\n\t\tcase FETCH_MEASURES:\n\t\t\treturn measure.payload;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n\n}\n","// Dependencies\nimport {createBrowserHistory} from 'history';\nimport {routerMiddleware} from 'connected-react-router';\nimport {createStore, applyMiddleware} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\n\n// Reducers\nimport createRootReducer from 'reducers';\n\n\nexport const history = createBrowserHistory()\n\nconst composeEnhancers = composeWithDevTools({\n  // options like actionSanitizer, stateSanitizer\n});\n\nexport default function configureStore(preloadedState) {\n  const middleware = [thunk];\n  const history = createBrowserHistory();\n  const store = createStore(\n\t\tcreateRootReducer(history),\n\t\tpreloadedState,\n\t\tcomposeEnhancers(\n\t\t\tapplyMiddleware(\n\t\t\t\t...middleware,\n\t\t\t\trouterMiddleware(history)\n\t\t\t)\n\t\t)\n\t);\n  return store;\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Stylesheets\nimport style from 'components/template/Container.module.scss';\n\nclass ContentContainer extends Component {\n\n  render() {\n    return (<div className={style.container}>\n      {this.props.children}\n    </div>)\n  }\n}\n\nexport default connect(null, null)(ContentContainer);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n\n// Template\nimport Container from 'components/template/Container';\n\n\nclass Home extends Component {\n  render() {\n    return (<Container>     \n    </Container>)\n  }\n}\n\nexport default connect(null, null)(Home);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Stylesheets\nimport style from 'components/partials/CommitsList/CommitsListElement.module.scss';\n\nclass CommitsListElement extends Component {\n\n  render() {\n    const commit = this.props.commit;\n    return this.props.commit\n      ? (<div className={style.commitsListElement}>\n        <div className={style.avatar}>\n          <a href={commit.author.html_url} className={style.author}>\n            <img src={commit.author.avatar_url} className={style.authorAvatar} alt={`Avatar for ${this.props.commit.commit.author.name}`}/>\n          </a>\n        </div>\n        <div className={style.text}>\n          <a href={commit.html_url} className={style.message}>{commit.commit.message}</a>\n          <a href={commit.author.html_url} className={style.authorName}>{this.props.commit.commit.author.name}</a>\n        </div>\n      </div>)\n      : '';\n  }\n}\n\nCommitsListElement.propTypes = {\n  commit: PropTypes.object.isRequired\n};\n\nexport default connect(null, null)(CommitsListElement);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Components\nimport CommitsListElement from 'components/partials/CommitsList/CommitsListElement';\n\n// Actions\nimport {fetchCommits} from 'actions/CommitActions';\n\n// Stylesheets\nimport style from 'components/partials/CommitsList.module.scss';\n\nclass CommitsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      waitingForCommitsResponse: true\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchCommits(this.props.owner, this.props.repo).then(() => {\n      this.setState({waitingForCommitsResponse: false})\n    });\n  }\n\n  renderCommitsListElements(commits) {\n    return commits && commits.length\n      ? commits.map(commit => {\n        return <CommitsListElement key={commit.sha} commit={commit} />\n      })\n      : '';\n  }\n\n  render() {\n    const commitsForRepo = !this.state.waitingForCommitsResponse && this.props.commits && this.props.commits[this.props.owner] && this.props.commits[this.props.owner][this.props.repo]\n      ? this.props.commits[this.props.owner][this.props.repo]\n      : null;\n    return commitsForRepo\n      ? (<div className={style.commitsList}>\n        {this.renderCommitsListElements(commitsForRepo)}\n      </div>)\n      : '';\n  }\n}\n\nCommitsList.propTypes = {\n  owner: PropTypes.string.isRequired,\n  repo: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({commits: state.commits});\n\nconst mapDispatchToProps = {\n  fetchCommits\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommitsList);\n","import {FETCH_COMMITS} from 'constants/types';\n\nexport const fetchCommits = (owner, repo) => (dispatch, getState) => {\n  const apiUrl = `https://api.github.com/repos/${owner}/${repo}/commits`;\n  let commits = getState().commits;\n  if (!commits[owner]) {\n    commits[owner] = {};\n  }\n  return fetch(apiUrl).then(res => res.json()).then(newCommits => {\n    commits[owner][repo] = newCommits;\n    dispatch({type: FETCH_COMMITS, payload: commits})\n  });\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Components\nimport CommitsList from 'components/partials/CommitsList';\n\n// Template\nimport Container from 'components/template/Container';\n\nclass Commits extends Component {\n  renderCommitsList(commits) {\n    const commitsElements = commits && commits.length\n      ? commits.map(commit => {\n        return (<div key={commit.sha}>{commit.commit.message}</div>)\n      })\n      : null;\n    return commitsElements\n      ? commitsElements\n      : '';\n  }\n\n  render() {\n    return (<Container>\n      <h1>Commits</h1>\n      <CommitsList owner='benjamindehli' repo='react-redux-boilerplate'/>\n    </Container>)\n  }\n}\n\nexport default connect(null, null)(Commits);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n// Stylesheets\n\n\nclass MeasuresListElement extends Component {\n\n  render() {\n    const measure = this.props.measure;\n    console.log('fisk' + measure)\n    return this.props.measure\n      ? (<div>\n        {measure.name}\n        {measure.progress}\n        {measure.volume}\n        {measure.status}\n        {measure.trafficLight}\n        {measure.results}\n        {measure.comment}\n      </div>)\n      : '';\n  }\n}\n\nMeasuresListElement.propTypes = {\n  measure: PropTypes.object.isRequired\n};\n\nexport default connect(null, null)(MeasuresListElement);\n","import {FETCH_MEASURES} from 'constants/types';\nimport jsondata from 'data/measures.json';\n\nexport const fetchMeasures = () => (dispatch) => {   \n // const apiUrl = jsondata;\n // let actions = getState().actions;  \n // return fetch(apiUrl).then(res => res.json()).then(newActions => {\n  //  actions = newActions;\n\n    dispatch({type: FETCH_MEASURES, payload: jsondata})\n  \n//  });\n}\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Components\nimport MeasuresListElement from 'components/partials/MeasuresList/MeasuresListElement';\n\n// Actions\nimport {fetchMeasures} from 'actions/MeasureActions';\n\n// Stylesheets\nimport style from 'components/partials/MeasuresList.module.scss'\n\nclass MeasuresList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      waitingForActionsResponse: true\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchMeasures();\n  }\n\n  renderMeasuresListElements(measures) {\n    console.log(measures)\n    return measures && measures.length\n      ? measures.map(measure => {\n        return <MeasuresListElement measure={measure}  />\n      })\n      : '';\n  }\n\n  render() {\n    return this.props.measures\n      ? (<div>\n        <h1 className={style.header}>Tiltaksplaner</h1>\n       \n        {this.renderMeasuresListElements(this.props.measures)}\n      </div>)\n      : '';\n  }\n}\n\nconst mapStateToProps = state => ({measures: state.measures});\n\nconst mapDispatchToProps = {\n  fetchMeasures\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeasuresList);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Components\nimport MeasuresListElement from 'components/partials/MeasuresList/MeasuresListElement';\n\n// Actions\nimport {fetchMeasures} from 'actions/MeasureActions';\n\n// Stylesheets\n\n\nclass Measure extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      waitingForActionsResponse: true\n    }\n  }\n\n  \n\n  renderMeasuresListElements(measure) {\n    return '';\n  }\n\n  render() {\n    return <MeasuresListElement />\n  }\n}\n\nconst mapStateToProps = state => ({action: state.measure});\n\nconst mapDispatchToProps = {\n  fetchMeasures\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Measure);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n\n// Template\nimport MeasuresList from 'components/partials/MeasuresList';\nimport Measure from 'components/partials/Measure'\nimport Container from 'components/template/Container';\n\n\nclass Measures extends Component {\n    renderMeasuresList(measures) {\n      const measuresElements = measures && measures.length\n        ? measures.map(measure => {\n          return (<div key={measure.sha}>{measure.action.message}</div>)\n        })\n        : null;\n      return measuresElements\n        ? measuresElements\n        : '';\n    }\n  \n    render() {\n        const selectedMeasureId = this.props.match && this.props.match.params && this.props.match.params.measureId\n        ? this.props.match.params.measureId\n        : null;\n      return selectedMeasureId ?  (<Container>       \n        <Measure measureId = {selectedMeasureId} />\n      </Container>) : (\n        <Container>        \n        <MeasuresList  />\n      </Container>\n      )\n    }\n  }\n\nexport default connect(null, null)(Measures);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\n// Template\nimport Container from 'components/template/Container';\n\nclass NotFound extends Component {\n\n  render() {\n    return (<Container>\n      <h1>404</h1>\n      <p>Siden finnes ikke</p>\n    </Container>)\n  }\n}\n\nexport default connect(null, null)(NotFound);\n","// Dependencies\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { MainNavigation } from '@kartverket/geonorge-web-components/main-navigation';\n\n\nclass NavigationBar extends Component {\n\n  render() {\n    return (<main-navigation environment=\"dev\"></main-navigation>)\n  }\n}\n\nexport default connect(null, null)(NavigationBar);\n","// Dependecies\nimport React, { Component } from 'react';\nimport {Provider} from 'react-redux';\nimport {Route, Switch} from 'react-router';\nimport {ConnectedRouter} from 'connected-react-router';\nimport WebFont from 'webfontloader';\n\n// Utils\nimport configureStore, {history} from 'utils/configureStore';\n\n// Routes\nimport Home from 'components/routes/Home';\nimport Commits from 'components/routes/Commits';\nimport Measures from 'components/routes/Measures';\nimport NotFound from 'components/routes/NotFound';\n\n\n// Partials\nimport NavigationBar from 'components/partials/NavigationBar';\n\nWebFont.load({\n  google: {\n    families: ['Roboto:400,700&display=swap']\n  }\n});\n\nconst initialState = {};\nconst store = configureStore(initialState);\n\nclass App extends Component {\n  render() {\n    return (<Provider store={store}>\n      <ConnectedRouter history={history}>\n        <NavigationBar />\n        <Switch>\n          <Route exact={true} path=\"/commits/:commitId\" render={(props) => (<Commits {...props}/>)}/>\n          <Route exact={true} path=\"/tiltaksplaner/:planId\" render={(props) => (<Measures {...props}/>)}/>\n          <Route exact={true} path=\"/commits\" render={(props) => (<Commits {...props}/>)}/>\n          <Route exact={true} path=\"/\" render={(props) => (<Home {...props}/>)}/>\n          <Route exact={true} path=\"/tiltaksplaner\" render={(props) => (<Measures {...props} />)}/>\n          <Route render={() => (<NotFound/>)}/>\n        </Switch>\n      </ConnectedRouter>\n    </Provider>);\n  }\n}\n\nexport default App;\n","// Dependencies\nimport {combineReducers} from 'redux';\nimport {connectRouter} from 'connected-react-router';\n\n// Reducers\nimport CommitsReducer from 'reducers/CommitsReducer';\nimport MeasuresReducer from 'reducers/MeasuresReducer';\n\nexport default(history) => combineReducers({\n  router: connectRouter(history),\n  commits: CommitsReducer,\n  measures: MeasuresReducer\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\nimport App from 'App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}